/* Truncation of the work table */
TRUNCATE TABLE EDW_WORK.TRAC_DIM_PARTY;

/* SPONSOR Select to capture insert and update records */
INSERT INTO EDW_WORK.TRAC_DIM_PARTY (DIM_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, FIRST_NM, MIDDLE_NM, LAST_NM, FULL_NM, BIRTH_DT, DEATH_DT, DECEASED_IND, GENDER_CDE, SENSITIVE_PARTY_IND, MM_EMPLOYEE_IND, INDIVIDUAL_INCOME_AMT, HOUSEHOLD_INCOME_AMT, NET_WORTH_RANGE_TXT, SMOKER_IND, MINDSET_SEGMENT_DESC, THREE_A_SEGMENT_DESC, PERMANENTLY_DISABLED_DT, PRIMARY_OCCUPATION_CDE, ADVISOR_IND, PARTY_TYPE_CDE, PARTY_SUB_TYPE_CDE, HOME_AGENCY_CDE,	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT, END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.FIRST_NM, DRVD.MIDDLE_NM, DRVD.LAST_NM, DRVD.FULL_NM, DRVD.BIRTH_DT, DRVD.DEATH_DT, DRVD.DECEASED_IND, DRVD.GENDER_CDE, DRVD.SENSITIVE_PARTY_IND, DRVD.MM_EMPLOYEE_IND, DRVD.INDIVIDUAL_INCOME_AMT, DRVD.HOUSEHOLD_INCOME_AMT, DRVD.NET_WORTH_RANGE_TXT, DRVD.SMOKER_IND, DRVD.MINDSET_SEGMENT_DESC, DRVD.THREE_A_SEGMENT_DESC, DRVD.PERMANENTLY_DISABLED_DT, DRVD.PRIMARY_OCCUPATION_CDE, DRVD.ADVISOR_IND, DRVD.PARTY_TYPE_CDE, DRVD.PARTY_SUB_TYPE_CDE, DRVD.HOME_AGENCY_CDE,
	 DRVD.BEGIN_DT ,  DRVD.BEGIN_DTM , CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 and DRVD.END_DT = '9999-12-31' THEN 'T' ELSE 'F' END::BOOLEAN AS CURRENT_ROW_IND, DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT uuid_gen(prehash_value(PREHASH_VALUE(CLEAN_STRING('TRAC_ENTITY'),CLEAN_STRING(ICU_ID),CLEAN_STRING(TO_CHAR(SPNSR_CMPNY_ID::INTEGER)))))::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, PREHASH_VALUE(CLEAN_STRING('TRAC_ENTITY'),CLEAN_STRING(ICU_ID),CLEAN_STRING(TO_CHAR(SPNSR_CMPNY_ID::INTEGER))) as PARTY_ID
		, clean_string('') as FIRST_NM
		, clean_string('') as MIDDLE_NM
		, clean_string('') as LAST_NM
		, clean_string(SPNSR_CMPNY_NM) as FULL_NM
		, clean_string('') as BIRTH_DT
		, clean_string('') as DEATH_DT
		, clean_string('') as DECEASED_IND
		, clean_string('') as GENDER_CDE
		, clean_string('') as SENSITIVE_PARTY_IND
		, clean_string('') as MM_EMPLOYEE_IND
		, clean_string('') AS INDIVIDUAL_INCOME_AMT
		, clean_string('') AS HOUSEHOLD_INCOME_AMT
		, clean_string('') AS NET_WORTH_RANGE_TXT
		, clean_string('') as SMOKER_IND
		, clean_string('') AS MINDSET_SEGMENT_DESC
		, clean_string('') AS THREE_A_SEGMENT_DESC
		, clean_string('') as PERMANENTLY_DISABLED_DT
		, clean_string('') AS PRIMARY_OCCUPATION_CDE
		, clean_string('') as ADVISOR_IND
		, clean_string('') as PARTY_TYPE_CDE
		, clean_string('') as PARTY_SUB_TYPE_CDE
		, clean_string('') as HOME_AGENCY_CDE
		, hash_gen(prehash_value(clean_string(''), clean_string(''), clean_string(''), clean_string(SPNSR_CMPNY_NM), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string(''), clean_string('')))::UUID AS CHECK_SUM
		, ADT.audit_id as AUDIT_ID
		, '203' as SOURCE_SYSTEM_ID
		, 'F'::boolean as RESTRICTED_ROW_IND
		, 'F'::boolean as LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT::timestamp as BEGIN_DTM
		,RCRD_EFFCTV_DT::date as BEGIN_DT
		,COALESCE(RCRD_TRM_DT::date, '9999-12-31'::date) as END_DT
		,COALESCE(RCRD_TRM_DT::timestamp, '9999-12-31'::timestamp) as END_DTM
	FROM TRAC_RPGW.DIM_SPONSOR_COMPANY AS SRC
	
	LEFT JOIN edw_audit.etl_batch_audit_vw ADT
	ON ADT.record_aligner = 1
	and ADT.batch_name = 'Trac_to_CIP') DRVD

LEFT JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, END_DT, CURRENT_ROW_IND, SOURCE_SYSTEM_ID, CHECK_SUM::UUID AS CHECK_SUM
		FROM EDW_WORK.TRAC_DIM_PARTY) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');
