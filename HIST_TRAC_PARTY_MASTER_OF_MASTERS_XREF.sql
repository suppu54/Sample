/* Truncation of the work table */
TRUNCATE TABLE EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF;

--DIM PARTICIPANT
/* PARTICIPANT - Select to capture insert and update records */
INSERT INTO EDW_WORK.trac_party_master_of_masters_xref (DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, PARTY_PRIOR_ID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT,
	END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.PARTY_PRIOR_ID, DRVD.SOR_PARTY_ID, DRVD.PARTY_ID_TYPE_CDE,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 AND DRVD.END_DT = '9999-12-31' THEN 'T'::BOOLEAN ELSE 'F'::BOOLEAN END AS CURRENT_ROW_IND,DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT UUID_GEN(PREHASH_VALUE(XREF.PARTY_ID)) ::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, CLEAN_STRING('') AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID
		, XREF.PARTY_ID AS PARTY_ID
		, CLEAN_STRING('') AS PARTY_PRIOR_ID
		, PREHASH_VALUE(CLEAN_STRING(CSTMR_ID_1),CLEAN_STRING(CSTMR_ID_2))AS SOR_PARTY_ID
		, 'TRAC_CUST_ID' AS PARTY_ID_TYPE_CDE
		, hash_gen(PREHASH_VALUE(clean_string('')))::UUID AS CHECK_SUM
		, ADT.AUDIT_ID AS AUDIT_ID
		, '203' AS SOURCE_SYSTEM_ID
		, 'F'::BOOLEAN AS RESTRICTED_ROW_IND
		, 'F'::BOOLEAN AS LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT::timestamp AS BEGIN_DTM
		, RCRD_EFFCTV_DT::date AS BEGIN_DT
		, CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
		, RCRD_TRM_DT::DATE AS END_DT
		, RCRD_TRM_DT::TIMESTAMP AS END_DTM
	FROM (SELECT DISTINCT PARTY_ID, SOR_PARTY_ID FROM EDW.PARTY_MASTER_OF_MASTERS_XREF WHERE PARTY_ID_TYPE_CDE = 'TRAC_PRTC_ID' AND LOGICAL_DELETE_IND = 'F'::BOOLEAN) XREF
	JOIN TRAC_RPGW.DIM_PARTICIPANT TRC
	ON XREF.SOR_PARTY_ID = CLEAN_STRING(TRC.ICU_ID||'_'||TRC.PLAN_ID||'_'||TRC.PRTCPNT_ID)
	LEFT JOIN EDW_AUDIT.ETL_BATCH_AUDIT_VW ADT
	ON ADT.RECORD_ALIGNER = 1
	AND ADT.BATCH_NAME = 'Trac_to_CIP'
	WHERE UPPER(TRC.ACTV_RCRD_IND) = 'Y' AND CLEAN_STRING(ICU_ID) NOT IN ('00002','-1') AND CLEAN_STRING(ICU_ID) IS NOT NULL
	AND CLEAN_STRING(CSTMR_ID_1) IS NOT NULL AND CLEAN_STRING(CSTMR_ID_2) IS NOT NULL) DRVD

LEFT OUTER JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE, SOURCE_SYSTEM_ID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.SOURCE_SYSTEM_ID='203'
AND TGT.PARTY_ID_TYPE_CDE='TRAC_CUST_ID'
AND TGT.SOR_PARTY_ID=DRVD.SOR_PARTY_ID
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');	

--DIM BENEFICIARY
/* BENEFICIARY - Select to capture insert and update records */
INSERT INTO EDW_WORK.trac_party_master_of_masters_xref (DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, PARTY_PRIOR_ID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT,
	END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.PARTY_PRIOR_ID, DRVD.SOR_PARTY_ID, DRVD.PARTY_ID_TYPE_CDE,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 AND DRVD.END_DT = '9999-12-31' THEN 'T'::BOOLEAN ELSE 'F'::BOOLEAN END AS CURRENT_ROW_IND,DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT UUID_GEN(PREHASH_VALUE(XREF.PARTY_ID)) ::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, CLEAN_STRING('') AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID
		, XREF.PARTY_ID AS PARTY_ID
		, CLEAN_STRING('') AS PARTY_PRIOR_ID
		, PREHASH_VALUE(CLEAN_STRING(CSTMR_ID_1),CLEAN_STRING(CSTMR_ID_2))AS SOR_PARTY_ID
		, 'TRAC_CUST_ID'  AS PARTY_ID_TYPE_CDE
		, hash_gen(PREHASH_VALUE(clean_string('')))::UUID AS CHECK_SUM
		, ADT.AUDIT_ID AS AUDIT_ID
		, '203' AS SOURCE_SYSTEM_ID
		, 'F'::BOOLEAN AS RESTRICTED_ROW_IND
		, 'F'::BOOLEAN AS LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT  ::timestamp AS BEGIN_DTM
		, RCRD_EFFCTV_DT  ::date AS BEGIN_DT
		, CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
		, RCRD_TRM_DT ::DATE AS END_DT
		, RCRD_TRM_DT ::TIMESTAMP AS END_DTM
	FROM (SELECT DISTINCT PARTY_ID, SOR_PARTY_ID FROM EDW.PARTY_MASTER_OF_MASTERS_XREF WHERE PARTY_ID_TYPE_CDE = 'TRAC_BEN_ID' AND LOGICAL_DELETE_IND = 'F'::BOOLEAN) XREF
	JOIN TRAC_RPGW.DIM_BENEFICIARY TRC
	ON XREF.SOR_PARTY_ID = CLEAN_STRING(TRC.icu_id||'_'||TRC.plan_id||'_'||TRC.prtcpnt_id||'_'||TRC.BNFCRY_ID)
	LEFT JOIN EDW_AUDIT.ETL_BATCH_AUDIT_VW ADT
	ON ADT.RECORD_ALIGNER = 1
	AND ADT.BATCH_NAME = 'Trac_to_CIP'
	WHERE UPPER(TRC.ACTV_RCRD_IND) = 'Y' AND CLEAN_STRING(ICU_ID) NOT IN ('00002','-1') AND CLEAN_STRING(ICU_ID) IS NOT NULL
	AND CLEAN_STRING(CSTMR_ID_1) IS NOT NULL AND CLEAN_STRING(CSTMR_ID_2) IS NOT NULL) DRVD

LEFT OUTER JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE, SOURCE_SYSTEM_ID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.SOURCE_SYSTEM_ID='203'
AND TGT.PARTY_ID_TYPE_CDE='TRAC_CUST_ID'
AND TGT.SOR_PARTY_ID=DRVD.SOR_PARTY_ID
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');
	
--DIM EMPLOYEE

/* EMPLOYEE - Select to capture insert and update records */
INSERT INTO EDW_WORK.trac_party_master_of_masters_xref (DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, PARTY_PRIOR_ID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT,
	END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.PARTY_PRIOR_ID, DRVD.SOR_PARTY_ID, DRVD.PARTY_ID_TYPE_CDE,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 AND DRVD.END_DT = '9999-12-31' THEN 'T'::BOOLEAN ELSE 'F'::BOOLEAN END AS CURRENT_ROW_IND,DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT UUID_GEN(PREHASH_VALUE(XREF.PARTY_ID)) ::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, CLEAN_STRING('') AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID
		, XREF.PARTY_ID AS PARTY_ID
		, CLEAN_STRING('') AS PARTY_PRIOR_ID
		, PREHASH_VALUE(CLEAN_STRING(CSTMR_ID_1),CLEAN_STRING(CSTMR_ID_2))AS SOR_PARTY_ID
		, 'TRAC_CUST_ID' AS PARTY_ID_TYPE_CDE
		, hash_gen(PREHASH_VALUE(clean_string('')))::UUID AS CHECK_SUM
		, ADT.AUDIT_ID AS AUDIT_ID
		, '203' AS SOURCE_SYSTEM_ID
		, 'F'::BOOLEAN AS RESTRICTED_ROW_IND
		, 'F'::BOOLEAN AS LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT  ::timestamp AS BEGIN_DTM
		, RCRD_EFFCTV_DT  ::date AS BEGIN_DT
		, CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
		, RCRD_TRM_DT ::DATE AS END_DT
		, RCRD_TRM_DT ::TIMESTAMP AS END_DTM
	FROM (SELECT DISTINCT PARTY_ID, SOR_PARTY_ID FROM EDW.PARTY_MASTER_OF_MASTERS_XREF WHERE PARTY_ID_TYPE_CDE = 'TRAC_EMP_ID' AND LOGICAL_DELETE_IND = 'F'::BOOLEAN) XREF
	JOIN TRAC_RPGW.DIM_EMPLOYEE TRC
	ON XREF.SOR_PARTY_ID = CLEAN_STRING(TRC.ICU_ID||'_'||TRC.AFFLT_CMPNY_ID||'_'||TRC.SPNSR_CMPNY_ID||'_'||TRC.EMPLY_TAX_ID)
	LEFT JOIN EDW_AUDIT.ETL_BATCH_AUDIT_VW ADT
	ON ADT.RECORD_ALIGNER = 1
	AND ADT.BATCH_NAME = 'Trac_to_CIP'
	WHERE UPPER(TRC.ACTV_RCRD_IND) = 'Y' AND CLEAN_STRING(ICU_ID) NOT IN ('00002','-1') AND CLEAN_STRING(ICU_ID) IS NOT NULL
	AND CLEAN_STRING(CSTMR_ID_1) IS NOT NULL AND CLEAN_STRING(CSTMR_ID_2) IS NOT NULL) DRVD

LEFT OUTER JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE, SOURCE_SYSTEM_ID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.SOURCE_SYSTEM_ID='203'
AND TGT.PARTY_ID_TYPE_CDE='TRAC_CUST_ID'
AND TGT.SOR_PARTY_ID=DRVD.SOR_PARTY_ID
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');

--DIM PARTICIPANT PROCESSING 4
/* PARTICIPANT #4 - Select to capture insert and update records */
INSERT INTO EDW_WORK.trac_party_master_of_masters_xref (DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, PARTY_PRIOR_ID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT, END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.PARTY_PRIOR_ID, DRVD.SOR_PARTY_ID, DRVD.PARTY_ID_TYPE_CDE,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 AND DRVD.END_DT = '9999-12-31' THEN 'T'::BOOLEAN ELSE 'F'::BOOLEAN END AS CURRENT_ROW_IND,DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT UUID_GEN(PREHASH_VALUE(XREF.PARTY_ID)) ::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, clean_string('') AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID
		, XREF.PARTY_ID AS PARTY_ID
		, CLEAN_STRING('') AS PARTY_PRIOR_ID
		, CLEAN_STRING(PRTCPNT_TAX_ID)AS SOR_PARTY_ID
		, 'GOVT_ID_S' AS PARTY_ID_TYPE_CDE
		, hash_gen(PREHASH_VALUE(clean_string('')))::UUID AS CHECK_SUM
		, ADT.AUDIT_ID AS AUDIT_ID
		, '203' AS SOURCE_SYSTEM_ID
		, 'F'::BOOLEAN AS RESTRICTED_ROW_IND
		, 'F'::BOOLEAN AS LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT  ::timestamp AS BEGIN_DTM
		, RCRD_EFFCTV_DT  ::date AS BEGIN_DT
		, CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
		, RCRD_TRM_DT ::DATE AS END_DT
		, RCRD_TRM_DT ::TIMESTAMP AS END_DTM
	FROM (SELECT DISTINCT PARTY_ID, SOR_PARTY_ID FROM EDW.PARTY_MASTER_OF_MASTERS_XREF WHERE PARTY_ID_TYPE_CDE = 'TRAC_PRTC_ID' AND LOGICAL_DELETE_IND = 'F'::BOOLEAN) XREF
	JOIN TRAC_RPGW.DIM_PARTICIPANT TRC
	ON XREF.SOR_PARTY_ID = CLEAN_STRING(TRC.ICU_ID||'_'||TRC.PLAN_ID||'_'||TRC.PRTCPNT_ID)
	LEFT JOIN EDW_AUDIT.ETL_BATCH_AUDIT_VW ADT
	ON ADT.RECORD_ALIGNER = 1
	AND ADT.BATCH_NAME = 'Trac_to_CIP'
	WHERE UPPER(TRC.ACTV_RCRD_IND) = 'Y' AND CLEAN_STRING(ICU_ID) NOT IN ('00002','-1') AND CLEAN_STRING(ICU_ID) IS NOT NULL
	AND CLEAN_STRING(PRTCPNT_TAX_ID) IS NOT NULL) DRVD

LEFT OUTER JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE, SOURCE_SYSTEM_ID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.SOURCE_SYSTEM_ID='203'
AND TGT.PARTY_ID_TYPE_CDE='TRAC_CUST_ID'
AND TGT.SOR_PARTY_ID=DRVD.SOR_PARTY_ID
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');


--DIM BENEFICIARY PROCESSING 4
/* BENEFICIARY #4 - Select to capture insert and update records */
INSERT INTO EDW_WORK.trac_party_master_of_masters_xref (DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, PARTY_PRIOR_ID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT, END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.PARTY_PRIOR_ID, DRVD.SOR_PARTY_ID, DRVD.PARTY_ID_TYPE_CDE,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 AND DRVD.END_DT = '9999-12-31' THEN 'T'::BOOLEAN ELSE 'F'::BOOLEAN END AS CURRENT_ROW_IND,DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT UUID_GEN(PREHASH_VALUE(XREF.PARTY_ID)) ::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, clean_string('') AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID
		, XREF.PARTY_ID AS PARTY_ID
		, CLEAN_STRING('') AS PARTY_PRIOR_ID
		, CLEAN_STRING(BNFCRY_TAX_ID)AS SOR_PARTY_ID
		, 'GOVT_ID_S' AS PARTY_ID_TYPE_CDE
		, hash_gen(PREHASH_VALUE(clean_string('')))::UUID AS CHECK_SUM
		, ADT.AUDIT_ID AS AUDIT_ID
		, '203' AS SOURCE_SYSTEM_ID
		, 'F'::BOOLEAN AS RESTRICTED_ROW_IND
		, 'F'::BOOLEAN AS LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT  ::timestamp AS BEGIN_DTM
		, RCRD_EFFCTV_DT  ::date AS BEGIN_DT
		, CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
		, RCRD_TRM_DT ::DATE AS END_DT
		, RCRD_TRM_DT ::TIMESTAMP AS END_DTM
	FROM (SELECT DISTINCT PARTY_ID, SOR_PARTY_ID FROM EDW.PARTY_MASTER_OF_MASTERS_XREF WHERE PARTY_ID_TYPE_CDE = 'TRAC_BEN_ID' AND LOGICAL_DELETE_IND = 'F'::BOOLEAN) XREF
	JOIN TRAC_RPGW.DIM_BENEFICIARY TRC
	ON XREF.SOR_PARTY_ID = CLEAN_STRING(TRC.ICU_ID||'_'||TRC.PLAN_ID||'_'||TRC.PRTCPNT_ID)
	LEFT JOIN EDW_AUDIT.ETL_BATCH_AUDIT_VW ADT
	ON ADT.RECORD_ALIGNER = 1
	AND ADT.BATCH_NAME = 'Trac_to_CIP'
	WHERE UPPER(TRC.ACTV_RCRD_IND) = 'Y' AND CLEAN_STRING(ICU_ID) NOT IN ('00002','-1') AND CLEAN_STRING(ICU_ID) IS NOT NULL
	AND CLEAN_STRING(BNFCRY_TAX_ID) IS NOT NULL) DRVD

LEFT OUTER JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE, SOURCE_SYSTEM_ID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.SOURCE_SYSTEM_ID='203'
AND TGT.PARTY_ID_TYPE_CDE='TRAC_CUST_ID'
AND TGT.SOR_PARTY_ID=DRVD.SOR_PARTY_ID
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');

--DIM EMPLOYEE PROCESSING 4
/* EMPLOYEE #4 - Select to capture insert and update records */
INSERT INTO EDW_WORK.trac_party_master_of_masters_xref (DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, PARTY_PRIOR_ID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT, END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.PARTY_PRIOR_ID, DRVD.SOR_PARTY_ID, DRVD.PARTY_ID_TYPE_CDE,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 AND DRVD.END_DT = '9999-12-31' THEN 'T'::BOOLEAN ELSE 'F'::BOOLEAN END AS CURRENT_ROW_IND,DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT UUID_GEN(PREHASH_VALUE(XREF.PARTY_ID)) ::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, clean_string('') AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID
		, XREF.PARTY_ID AS PARTY_ID
		, CLEAN_STRING('') AS PARTY_PRIOR_ID
		, CLEAN_STRING(EMPLY_TAX_ID)AS SOR_PARTY_ID
		, 'GOVT_ID_S'  AS PARTY_ID_TYPE_CDE
		, hash_gen(PREHASH_VALUE(clean_string('')))::UUID AS CHECK_SUM
		, ADT.AUDIT_ID AS AUDIT_ID
		, '203' AS SOURCE_SYSTEM_ID
		, 'F'::BOOLEAN AS RESTRICTED_ROW_IND
		, 'F'::BOOLEAN AS LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT  ::timestamp AS BEGIN_DTM
		, RCRD_EFFCTV_DT  ::date AS BEGIN_DT
		, CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
		, RCRD_TRM_DT ::DATE AS END_DT
		, RCRD_TRM_DT ::TIMESTAMP AS END_DTM
	FROM (SELECT DISTINCT PARTY_ID, SOR_PARTY_ID FROM EDW.PARTY_MASTER_OF_MASTERS_XREF WHERE PARTY_ID_TYPE_CDE = 'TRAC_EMP_ID' AND LOGICAL_DELETE_IND = 'F'::BOOLEAN) XREF
	JOIN TRAC_RPGW.DIM_EMPLOYEE TRC
	ON XREF.SOR_PARTY_ID = CLEAN_STRING(TRC.ICU_ID||'_'||TRC.AFFLT_CMPNY_ID||'_'||TRC.SPNSR_CMPNY_ID||'_'||TRC.EMPLY_TAX_ID)
	LEFT JOIN EDW_AUDIT.ETL_BATCH_AUDIT_VW ADT
	ON ADT.RECORD_ALIGNER = 1
	AND ADT.BATCH_NAME = 'Trac_to_CIP'
	WHERE UPPER(TRC.ACTV_RCRD_IND) = 'Y' AND CLEAN_STRING(ICU_ID) NOT IN ('00002','-1') AND CLEAN_STRING(ICU_ID) IS NOT NULL
	AND CLEAN_STRING(EMPLY_TAX_ID) IS NOT NULL) DRVD

LEFT OUTER JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE, SOURCE_SYSTEM_ID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.SOURCE_SYSTEM_ID='203'
AND TGT.PARTY_ID_TYPE_CDE='TRAC_CUST_ID'
AND TGT.SOR_PARTY_ID=DRVD.SOR_PARTY_ID
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');

/* PROCESSING NOTE 11 - Select to capture insert and update records */
INSERT INTO EDW_WORK.trac_party_master_of_masters_xref (DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, PARTY_PRIOR_ID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT, END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.PARTY_PRIOR_ID, DRVD.SOR_PARTY_ID, DRVD.PARTY_ID_TYPE_CDE,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 AND DRVD.END_DT = '9999-12-31' THEN 'T'::BOOLEAN ELSE 'F'::BOOLEAN END AS CURRENT_ROW_IND,DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT uuid_gen(PREHASH_VALUE(CLEAN_STRING('TRAC_ENTITY'),CLEAN_STRING(ICU_ID),CLEAN_STRING(TO_CHAR(SPNSR_CMPNY_ID::INTEGER)))) ::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, uuid_gen(PREHASH_VALUE(CLEAN_STRING('TRAC_ENTITY'),CLEAN_STRING(ICU_ID),CLEAN_STRING(TO_CHAR(SPNSR_CMPNY_ID::INTEGER)))) ::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID
		, PREHASH_VALUE(CLEAN_STRING('TRAC_ENTITY'),CLEAN_STRING(ICU_ID),CLEAN_STRING(TO_CHAR(SPNSR_CMPNY_ID::INTEGER))) AS PARTY_ID
		, PREHASH_VALUE(CLEAN_STRING('TRAC_ENTITY'),CLEAN_STRING(ICU_ID),CLEAN_STRING(TO_CHAR(SPNSR_CMPNY_ID::INTEGER))) AS PARTY_PRIOR_ID
		, '' AS SOR_PARTY_ID
		, 'MSTR_PRTY_ID' AS PARTY_ID_TYPE_CDE
		, hash_gen(PREHASH_VALUE(clean_string('')))::UUID AS CHECK_SUM
		, ADT.AUDIT_ID AS AUDIT_ID
		, '203' AS SOURCE_SYSTEM_ID
		, 'F'::BOOLEAN AS RESTRICTED_ROW_IND
		, 'F'::BOOLEAN AS LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT  ::timestamp AS BEGIN_DTM
		, RCRD_EFFCTV_DT  ::date AS BEGIN_DT
		, CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
		, RCRD_TRM_DT ::DATE AS END_DT
		, RCRD_TRM_DT ::TIMESTAMP AS END_DTM
	FROM TRAC_RPGW.DIM_SPONSOR_COMPANY TRC
	LEFT JOIN EDW_AUDIT.ETL_BATCH_AUDIT_VW ADT
	ON ADT.RECORD_ALIGNER = 1
	AND ADT.BATCH_NAME = 'Trac_to_CIP'
	WHERE UPPER(TRC.ACTV_RCRD_IND) = 'Y' AND CLEAN_STRING(ICU_ID) NOT IN ('00002','-1') AND CLEAN_STRING(ICU_ID) IS NOT NULL)DRVD

LEFT OUTER JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE, SOURCE_SYSTEM_ID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.SOURCE_SYSTEM_ID='203'
AND TGT.PARTY_ID_TYPE_CDE='MSTR_PRTY_ID'
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');

/* PROCESSING NOTE 12 - Select to capture insert and update records */
INSERT INTO EDW_WORK.trac_party_master_of_masters_xref (DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, PARTY_ID, PARTY_PRIOR_ID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE,
	BEGIN_DT, BEGIN_DTM, ROW_PROCESS_DTM, AUDIT_ID, LOGICAL_DELETE_IND, CHECK_SUM, CURRENT_ROW_IND, END_DT, END_DTM, SOURCE_SYSTEM_ID, RESTRICTED_ROW_IND)
SELECT DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID, DRVD.DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, DRVD.PARTY_ID, DRVD.PARTY_PRIOR_ID, DRVD.SOR_PARTY_ID, DRVD.PARTY_ID_TYPE_CDE,
	DRVD.BEGIN_DT, DRVD.BEGIN_DTM, CURRENT_TIMESTAMP as ROW_PROCESS_DTM, DRVD.AUDIT_ID, DRVD.LOGICAL_DELETE_IND, DRVD.CHECK_SUM, CASE WHEN ROW_NUMBER() OVER (PARTITION BY DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID ORDER BY DRVD.END_DTM desc, DRVD.END_DT desc) = 1 AND DRVD.END_DT = '9999-12-31' THEN 'T'::BOOLEAN ELSE 'F'::BOOLEAN END AS CURRENT_ROW_IND,DRVD.END_DT, DRVD.END_DTM, DRVD.SOURCE_SYSTEM_ID, DRVD.RESTRICTED_ROW_IND
FROM (SELECT DISTINCT uuid_gen(PREHASH_VALUE(CLEAN_STRING('TRAC_ENTITY'),CLEAN_STRING(ICU_ID),CLEAN_STRING(TO_CHAR(SPNSR_CMPNY_ID::INTEGER)))) ::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID
		, CLEAN_STRING('') AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID
		, PREHASH_VALUE(CLEAN_STRING('TRAC_ENTITY'),CLEAN_STRING(ICU_ID),CLEAN_STRING(TO_CHAR(SPNSR_CMPNY_ID::INTEGER))) AS PARTY_ID
		, CLEAN_STRING('') AS PARTY_PRIOR_ID
		, CLEAN_STRING(SPNSR_CMPNY_TAX_ID) AS SOR_PARTY_ID
		, 'GOVT_ID_T' AS PARTY_ID_TYPE_CDE
		, hash_gen(PREHASH_VALUE(clean_string('')))::UUID AS CHECK_SUM
		, ADT.AUDIT_ID AS AUDIT_ID
		, '203' AS SOURCE_SYSTEM_ID
		, 'F'::BOOLEAN AS RESTRICTED_ROW_IND
		, 'F'::BOOLEAN AS LOGICAL_DELETE_IND
		, RCRD_EFFCTV_DT  ::timestamp AS BEGIN_DTM
		, RCRD_EFFCTV_DT  ::date AS BEGIN_DT
		, CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
		, RCRD_TRM_DT ::DATE AS END_DT
		, RCRD_TRM_DT ::TIMESTAMP AS END_DTM
	FROM TRAC_RPGW.DIM_SPONSOR_COMPANY TRC
	LEFT JOIN EDW_AUDIT.ETL_BATCH_AUDIT_VW ADT
	ON ADT.RECORD_ALIGNER = 1
	AND ADT.BATCH_NAME = 'Trac_to_CIP'
	WHERE UPPER(TRC.ACTV_RCRD_IND) = 'Y' AND CLEAN_STRING(ICU_ID) NOT IN ('00002','-1') AND CLEAN_STRING(ICU_ID) IS NOT NULL AND CLEAN_STRING(SPNSR_CMPNY_TAX_ID) IS NOT NULL) DRVD

LEFT OUTER JOIN (SELECT DIM_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID::UUID AS DIM_PRIOR_PARTY_NATURAL_KEY_HASH_UUID, SOR_PARTY_ID, PARTY_ID_TYPE_CDE, SOURCE_SYSTEM_ID, END_DT, CURRENT_ROW_IND, CHECK_SUM::UUID AS CHECK_SUM
	FROM EDW_WORK.TRAC_PARTY_MASTER_OF_MASTERS_XREF) TGT
ON TGT.CURRENT_ROW_IND= TRUE
AND TGT.END_DT='9999-12-31'
AND TGT.SOURCE_SYSTEM_ID='203'
AND TGT.PARTY_ID_TYPE_CDE='GOVT_ID_T'
AND TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = DRVD.DIM_PARTY_NATURAL_KEY_HASH_UUID

WHERE CASE WHEN TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL THEN 'I'
	WHEN TGT.CHECK_SUM <> DRVD.CHECK_SUM THEN 'U'
	ELSE 'D' END IN ('I','U');
